# ORCHESTRATOR CONFIGURATION 
#
# The provisioner specifies information related to the creation of the machines
# that will run within the cluster.
provisioner {
  type: generic
}

# The machines section defines the various "roles" within the cluster, the
# machines that belong to the role, and the roles within the cluster that are
# allowed to be assigned to those machines.
machines: {
 central: {
    hosts: [ "192.168.50.31" ]
    suitable_tags: [
      "auditlog-database"
      "component-database"
      "api-server"
      "job-manager"
      "nats-server"
      "router"
    ]
}
 singleton: {
    hosts: [ "192.168.50.32" ]
    suitable_tags: [
      "stagehand"
      "cluster-monitor"
      "auth-server"
      "health-manager"
      "metrics-manager" 
      "package-manager"
      "redis-server"
      "statsd-server"
      "graphite-server"
      "tcp-router" 
    ]
}

# monitoring: {
#    hosts: [ "10.125.153.236" ]
#    suitable_tags: [
#      "monitoring"
#    ]
# }

  # The instance_manager boxes run the Instance Managers within the
  # cluster. They are where the job workloads are executed and are the machines
  # that are generally scaled up the most within a cluster.
  instance_manager: {
    hosts: [ "192.168.50.33" ],
    suitable_tags: [
      "instance-manager"
    ]
  }
}

# The components section specifies the desired number of each of the component
# types. Changes here will either find a new place to run components or scale
# the cluster down if the numbers are decreased.
components: {

  # Central Components
  component-database: 1
   auditlog-database: 1
          api-server: 1
         job-manager: 1
              router: 1
     cluster-monitor: 1
         nats-server: 1
  # Singletons within the system that are role specific.
          tcp-router: 1
     graphite-server: 1
        redis-server: 1
       statsd-server: 1
  # SPOF Components
         auth-server: 1
      health-manager: 1
     metrics-manager: 1
  # NOTE: Package Manager is currently set to a single instance because it
  # uses local storage.
     package-manager: 1
           stagehand: 1
          monitoring: 0
  # Instance Managers will likely scale the most.
    instance-manager: 1
}

# Settings that will get pulled into Chef and made available to machines within
# the cluster.
chef: {
  "continuum": {
    "cluster_platform": "baremetal",
    "cluster_name": "mine",
    "base_domain": "apcera.test",
    "staff_ssh_access": true,
    "ssh": {
      "custom_keys":[
       "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC9Czz98kASpEpaz2KjsLK3QHgRnAP8QtxIVjqo2bNclxefmMDrxqpquznCldALoJfNcMxEHLnsTbOXBdOFknVGzv4UDXzUJX8sAQK1nmeT2TjNjbbvXx0Nn0CsDi7HAbLMYIJ8lrmq/c4s0G/Ws+0OX3NgqKvhYjdJDClqVh6YNIIsgv7MdE4yoKwiHebqbZJy61X2zQiwWX4J8e3b4nmvzONhkDkrAwJ/+ywuHcxOiv+xSaiZsdRuP7ixZ5sDRImYlMtGg1pv+Ujeazs005eBAgOI1kRAWaMJTZ9Uo+AurKt82uijfMULK492cKSJs+9mdASYbfql8OV4W6S6tDCH orchestrator@bare04",
       "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3UNioLiJ796l+UKbrBSkgd7DG89dTBpEILMT9Ma5CTdltcitBxq7k0OXGVVpmy6rBgWFAeKxA0qUJwWwt4r+nHSlU71hMNh1GM5h/rlx95b50yU56r55H5/L1zfvs++ZTdObVHjJahF+sQ/UifDRtcjrPpCmYBu09tmeN+41ASG85IING7A1QhnTuXLF22kIygDj9FwxWCKx8uECeff7odVS2aq0jbeNt+ZHaRQPIAsdny5IXZzxqMS8j7XrbMJe06O88cUJIR8PkSschemiwyLLA6Hcz2KfGEjWdVjb3BjZaGNO1ECKKgLTPpKczjGxhUimJz6J8eu22O/CN1Lxz"
      ]
    },
    "cluster": {
      "subnets": [ "192.168.50.0/24" ]
    },
    "mounts": {
      "instance-manager": {
        "device": "/dev/sda2"
      }
      "package-storage": {
        "fail_if_missing": false
      }
      "graphite": {
        "fail_if_missing": false
      }
      "redis": {
        "fail_if_missing": false
      }
    },
    "package_manager": {
      "package_store_type": "local",
      "local_store": {
        "cleanup_on_delete": true
      }
    },
    "instance_manager": {
      "keep_logs": true,
      "container_dns_ip": [ "192.168.50.100" ],
      "log": {
        "level": "all"
      }
    },
    "router": {
       "http_port": 80,
       "https_port": 443,
       "ssl": {
         "enable": false,
       }
    },
    "auth_server": {
      "identity": {
        "basic": {
          "enabled": true,
          "users": [
            {
              "name": "admin",
              "password": "ericsson"
            }
          ]
        },
      },
      # Apcera SRE staff get admin access via apceraOperations.pol.erb
      # All others who should have access from initial turn-up need to be in this
      # chef.continuum.auth_server.admins array.
      "admins": [
        "username@apcera.me"
      ],
    },

  },
}
